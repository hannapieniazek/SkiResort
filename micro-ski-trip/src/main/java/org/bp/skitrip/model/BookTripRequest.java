/*
 * Ski trip micro service
 * Micro service to book a ski trip
 *
 * OpenAPI spec version: 1.0.0
 * Contact: supportm@bp.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.bp.skitrip.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;

/**
 * BookTripRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-01-27T21:00:53.025+01:00[Europe/Belgrade]")
public class BookTripRequest {
  @JsonProperty("person")
  private Person person = null;

  @JsonProperty("skiPass")
  private SkiPass skiPass = null;

  @JsonProperty("skiEquipment")
  private SkiEquipment skiEquipment = null;

  @JsonProperty("paymentCard")
  private PaymentCard paymentCard = null;

  public BookTripRequest person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public BookTripRequest skiPass(SkiPass skiPass) {
    this.skiPass = skiPass;
    return this;
  }

   /**
   * Get skiPass
   * @return skiPass
  **/
  public SkiPass getSkiPass() {
    return skiPass;
  }

  public void setSkiPass(SkiPass skiPass) {
    this.skiPass = skiPass;
  }

  public BookTripRequest skiEquipment(SkiEquipment skiEquipment) {
    this.skiEquipment = skiEquipment;
    return this;
  }

   /**
   * Get skiEquipment
   * @return skiEquipment
  **/
  public SkiEquipment getSkiEquipment() {
    return skiEquipment;
  }

  public void setSkiEquipment(SkiEquipment skiEquipment) {
    this.skiEquipment = skiEquipment;
  }

  public BookTripRequest paymentCard(PaymentCard paymentCard) {
    this.paymentCard = paymentCard;
    return this;
  }

   /**
   * Get paymentCard
   * @return paymentCard
  **/
  public PaymentCard getPaymentCard() {
    return paymentCard;
  }

  public void setPaymentCard(PaymentCard paymentCard) {
    this.paymentCard = paymentCard;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookTripRequest bookTripRequest = (BookTripRequest) o;
    return Objects.equals(this.person, bookTripRequest.person) &&
        Objects.equals(this.skiPass, bookTripRequest.skiPass) &&
        Objects.equals(this.skiEquipment, bookTripRequest.skiEquipment) &&
        Objects.equals(this.paymentCard, bookTripRequest.paymentCard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(person, skiPass, skiEquipment, paymentCard);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookTripRequest {\n");
    
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    skiPass: ").append(toIndentedString(skiPass)).append("\n");
    sb.append("    skiEquipment: ").append(toIndentedString(skiEquipment)).append("\n");
    sb.append("    paymentCard: ").append(toIndentedString(paymentCard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
